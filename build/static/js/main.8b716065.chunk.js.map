{"version":3,"sources":["components/Inputs.js","components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","services/person.js","App.js","reportWebVitals.js","index.js"],"names":["Inputs","value","setFunction","onChange","Filter","text","PersonForm","handlePersonsAdd","newName","newNumber","handleNameChange","handleNumberChange","onSubmit","type","Persons","showAll","persons","handlePersonDelete","newSearch","peopleToShow","filter","person","name","toLowerCase","includes","map","number","onClick","id","Notification","message","className","baseUrl","personService","getAll","axios","get","then","response","data","create","newPerson","post","deletePerson","personId","console","log","delete","update","updatedPerson","pid","test","put","App","useState","setPersons","setNewName","setNewNumber","setNewSearch","setShowAll","errorMessage","setErrorMessage","newMessage","setMessage","updatePerson","personInfo","oldId","updatedPpl","setTimeout","checkDuplicateName","i","window","confirm","addPerson","concat","returnedPerson","catch","error","useEffect","initialPersons","event","target","length","preventDefault","personObject","singlePerson","filteredPersons","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8b716065.chunk.js","sourcesContent":["import React from 'react'\n\nconst Inputs = ({value, setFunction}) => <input value={value} onChange={setFunction}></input>\n\nexport default Inputs","import React from 'react'\nimport Inputs from './Inputs'\n\n\nconst Filter = ({text, value, setFunction}) => <div>{text} <Inputs value={value} setFunction={setFunction}/></div>\n\n\nexport default Filter","import React from 'react'\n\nconst PersonForm = ({handlePersonsAdd, newName, newNumber, handleNameChange, handleNumberChange}) => {\n  return (\n    <div>\n      <form onSubmit={handlePersonsAdd}>\n        <div>name: <input value={newName} onChange={handleNameChange} /></div>\n        <div>number: <input value={newNumber} onChange={handleNumberChange} /></div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form> \n    </div>   \n  )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Persons = ({showAll, persons, handlePersonDelete, newSearch}) => {\n  // My first conditional operator!\n  // const result = condition ? val1 : val2 Meaning if condition is True then val1 is used and val2 is used when False.\n  const peopleToShow = showAll\n  ? persons\n  : persons.filter(person => person.name.toLowerCase().includes(newSearch.toLowerCase()) === true)\n\n  return (\n  <div>{peopleToShow.map(person => \n    <div key={person.id}>\n      {person.name} {person.number} \n      <button onClick={() => handlePersonDelete(person)}>Delete</button>\n    </div>\n  )}\n  </div>)\n}\n\nexport default Persons","import React from 'react'\n\nconst Notification = ({ message, className }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className={className}>\n      {message}\n    </div>\n  )\n}\n\nexport default Notification","import axios from 'axios'\nconst baseUrl = '/api/persons';\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newPerson => {\n  const request = axios.post(baseUrl, newPerson)\n  return request.then(response => response.data)\n}\n\nconst deletePerson = personId => {\n  console.log(personId);\n  const request = axios.delete(`${baseUrl}/${personId}`)\n  const test = request.then(response => response.data)\n  return test\n}\n\nconst update = (updatedPerson, pid) => {\n  const request = axios.put(`${baseUrl}/${pid}`, updatedPerson)\n  const test = request.then(response => response.data)\n  console.log(test);\n  return test\n}\nconst personService = {getAll, create, deletePerson, update}\nexport default personService","import React, { useState, useEffect } from 'react'\n// import axios from 'axios'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\nimport personService from './services/person'\nimport './index.css'\n\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n\n  // Holds the current state of an input, updated with each keystroke\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newSearch, setNewSearch ] = useState('')\n  const [showAll, setShowAll] = useState(true)  // false if any characters in newSearch\n  // eslint-disable-next-line\n  const [filteredPersons, setFilteredPerson] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [newMessage, setMessage] = useState(null)\n\n  // used to updated inputs\n  const handleNameChange = event => setNewName(event.target.value)\n  \n\n  const handleNumberChange = event => setNewNumber(event.target.value)\n  \n\n  // If search input has any characters, showAll condition becomes false because there needs to be a filter\n  const handleSearchChange = (event) => {\n    setNewSearch(event.target.value)\n    if (event.target.value.length !== 0) {\n      setShowAll(false)\n    } else {\n      setShowAll(true)\n    }\n  }\n\n  // On form submit, stop refresh, create new object and check for duplicates\n  const handlePersonsAdd = (event) => {\n    event.preventDefault()\n    \n    // If list is empty sets id to 1, others sets to the new highest id\n    const pid = () => {\n      if (persons.length === 0) {return 1}\n      return persons[persons.length-1].id + 1\n    }\n\n    const personObject = {\n      name: newName,\n      number: newNumber,\n      id: pid(),\n    }\n\n    // if duplicate checks to update existing entry and returns true, otherwise returns false\n    if (checkDuplicateName(personObject)) {return} \n\n    addPerson(personObject)\n    setNewName('')  // Clears inputs\n    setNewNumber('')\n  }\n\n  // Confirms with user that they want to delete, passes id to delete request, filters out the deleted name \n  // then rerenders the page with the correct information\n  const handlePersonsDelete = (singlePerson) => {\n    if (window.confirm(`Delete ${singlePerson.name}?`)) {\n      personService\n        .deletePerson(singlePerson.id)\n        .then(() => {\n          const filteredPersons = persons.filter(person => person.id !== singlePerson.id)\n          setPersons(filteredPersons)\n        })\n        .catch(error => {\n          setErrorMessage(\n            `'${singlePerson.name}' was already removed from server`\n          )\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000)\n        })\n    }\n  }\n  \n  // checks if user wants to update entry number when duplicate names are added \n  const updatePerson = (personInfo, oldId) => {\n    personService\n      .update(personInfo, oldId)\n      .then(() => {\n        // Modifies the person to be updated by replacing their object with another that has the same pid\n        const updatedPpl = persons.map(person => {\n          if (person.name === personInfo.name) {\n            return {...personInfo, id:person.id}\n          }\n          return person\n        })\n        \n        // re-render screen with current information\n        setPersons(updatedPpl)\n        setNewName('')\n        setNewNumber('')\n        setMessage(\n          `Contact number updated for '${personInfo.name}'`\n        )\n        setTimeout(() => {\n          setMessage(null)\n        }, 5000)\n      })\n  }\n  // Checks current names in phonebook, alerting the user if they are trying to add a duplicate name.\n  const checkDuplicateName = (personInfo) => {\n    for (let i in persons) {\n      if (personInfo.name.toLowerCase() === persons[i].name.toLowerCase()) {\n        if(window.confirm(`${newName} is already added to phonebook, update number?`)) {\n          updatePerson(personInfo, persons[i].id)\n        }\n        return true\n      }\n    }\n    return false\n  }\n\n  const addPerson = personInfo => {\n    setPersons(persons.concat(personInfo))  // concat returns new object\n    personService\n      .create(personInfo)\n      .then(returnedPerson => setPersons(persons.concat(returnedPerson)))\n      .catch(error => {\n        setMessage(\n          `${error.response.data}`\n        )\n        setTimeout(() => {\n          setMessage(null)\n        }, 5000)\n      })\n      setMessage(\n        `Added ${personInfo.name}`\n      )\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n      \n  }\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(persons.concat(initialPersons))\n      })\n// eslint-disable-next-line\n  }, [])\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <Notification message={errorMessage} className={'error'}/>\n      <Notification message={newMessage} className={'message'}/>\n      <Filter text='Search' value={newSearch} setFunction={handleSearchChange}/>\n\n      <h2>Add New</h2>\n\n      <PersonForm\n        handlePersonsAdd={handlePersonsAdd}\n        newName={newName}\n        newNumber={newNumber}\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n      />\n\n      <h2>Numbers</h2>\n      \n      <Persons \n        showAll={showAll} \n        persons={persons}\n        handlePersonDelete={handlePersonsDelete} \n        newSearch={newSearch}\n      />\n    </div>\n  )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}